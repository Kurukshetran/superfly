<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">
		
	<!-- This is a configuration for Spring Security 2.0.x. For configuration for
		a more recent version of Spring Security (now it's 3.0.x), see
		spring-security.xml -->
		
    <sec:http auto-config="false" entry-point-ref="twoStepAuthenticationProcessingFilterEntryPoint">
        <sec:intercept-url pattern="/favicon.ico" filters="none"/>
        <sec:intercept-url pattern="/css*"   filters="none"/>
        <sec:intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        
        <sec:intercept-url pattern="/adminpage1.html" access="ROLE_ADMINPAGE1"/>
        <sec:intercept-url pattern="/adminpage2.html" access="ROLE_ADMINPAGE2"/>
        <sec:intercept-url pattern="/userpage1.html" access="ROLE_USERPAGE1"/>
        <sec:intercept-url pattern="/userpage2.html" access="ROLE_USERPAGE2"/>
        <sec:intercept-url pattern="/**" access="ROLE_ADMINPAGE1,ROLE_ADMINPAGE2,ROLE_USERPAGE1,ROLE_USERPAGE2"/>
        
        <sec:logout />
        <sec:anonymous/>

    </sec:http>
    
    <sec:authentication-manager alias="authenticationManager"/>

    <bean id="twoStepAuthenticationProcessingFilterEntryPoint" class="com.payneteasy.superfly.security_2_0.TwoStepAuthenticationProcessingFilterEntryPoint">
    	<property name="loginFormUrl" value="/login.jsp"/>
    	<property name="loginFormStepTwoUrl" value="/login-step2.jsp"/>
    </bean>
    
    <bean id="twoStepAuthenticationProcessingFilter" class="com.payneteasy.superfly.security_2_0.TwoStepAuthenticationProcessingFilter">
    	<sec:custom-filter position="AUTHENTICATION_PROCESSING_FILTER"/>
    	<property name="authenticationManager" ref="authenticationManager"/>
    	<property name="defaultTargetUrl" value="/"/>
    	<property name="authenticationFailureUrl" value="/login.jsp"/>
    	<!-- Uncomment the following if you are not using SSL client auth for
    		calls to SSOService and write your own subsystem name here. If you
    		use SSL client auth, your subsystem name will be extracted from
    		your client certificate (its CN field by default) -->
    	<!-- 
    	<property name="subsystemIdentifier" value="superfly-demo"/>
    	 -->
    </bean>
    
    <util:list id="actionNameToRoleNameTransformers">
		<bean class="com.payneteasy.superfly.security.UppercaseTransformer"/>
		<bean class="com.payneteasy.superfly.security.PrependingTransformer">
			<property name="prefix" value="ROLE_"/>
		</bean>
    </util:list>
    
<!-- 
    <bean id="superflyMockAuthenticationProvider" class="com.payneteasy.superfly.security_2_0.SuperflyMockAuthenticationProvider">
    	<sec:custom-authentication-provider/>
    	<property name="enabled" value="true"/>
    	<property name="username" value="su"/>
    	<property name="password" value="password"/>
    	<property name="transformers" ref="actionNameToRoleNameTransformers"/>
    	<property name="actionsMapBuilder">
    		<bean class="com.payneteasy.superfly.security.mapbuilder.AllForAllActionsMapBuilder">
    			<property name="roleNames">
		    		<list>
		    			<value>role1</value>
		    			<value>role2</value>
		    		</list>
    			</property>
    			<property name="actionsSource">
    				<bean class="com.payneteasy.superfly.security.mapbuilder.CollectingActionsSource">
    					<property name="actionDescriptionCollector" ref="mergingActionDescriptionCollector"/>
    				</bean>
    			</property>
    		</bean>
    	</property>
    </bean>
 -->
    
    <bean id="superflyAuthenticationProvider" class="com.payneteasy.superfly.security_2_0.SuperflyAuthenticationProvider">
    	<sec:custom-authentication-provider/>
    	<property name="ssoService" ref="ssoService"/>
    	<property name="transformers" ref="actionNameToRoleNameTransformers"/>
    </bean>
    
    <bean id="ssoUserSessionBindFilter" class="com.payneteasy.superfly.security_2_0.SSOUserSessionBindFilter">
    	<sec:custom-filter after="AUTHENTICATION_PROCESSING_FILTER"/>
    </bean>
    
</beans>
