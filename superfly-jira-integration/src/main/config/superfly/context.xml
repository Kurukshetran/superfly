<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
		
	<context:annotation-config/>
	<context:property-placeholder location="classpath:superfly/superfly.properties"/>
	
	<bean id="ssoServiceHttpClient" class="com.payneteasy.superfly.factorybean.HttpClientFactoryBean">
		<property name="hostConfig">
			<bean class="com.payneteasy.superfly.factorybean.StoresAndSSLConfig">
				<property name="keyStoreResource" value="${context.keystoreResource}"/>
				<property name="keyStorePassword" value="${context.keystorePassword}"/>
				<property name="trustKeyStoreResource" value="${context.truststoreResource}"/>
				<property name="trustKeyStorePassword" value="${context.truststorePassword}"/>
				<property name="host" value="${superfly.sso.service.host}"/>
				<property name="securePort" value="${superfly.sso.service.secure.port}"/>
			</bean>
		</property>
	</bean>
	
	<bean id="ssoServiceHttpInvokerRequestExecutor" class="org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor">
		<property name="httpClient" ref="ssoServiceHttpClient"/>
	</bean>

	<bean id="ssoService" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceInterface" value="com.payneteasy.superfly.api.SSOService"/>
		<property name="serviceUrl" value="${superfly.sso.service.url}"/>
		<property name="httpInvokerRequestExecutor" ref="ssoServiceHttpInvokerRequestExecutor"/>
	</bean>
	
	<!--
		If not using SSL client auth, comment out ssoService definition above
		and uncomment its definition below.
	 -->

<!-- 
	<bean id="ssoService" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceInterface" value="com.payneteasy.superfly.api.SSOService"/>
		<property name="serviceUrl" value="${superfly.sso.service.url}"/>
	</bean>
 -->

	<bean id="commaDelimitedListActionDescriptionCollector" class="com.payneteasy.superfly.client.CommaDelimitedListActionDescriptionCollector">
		<property name="commaDelimitedList" value="${actions.list}"/>
	</bean>	
	
	<bean id="mergingActionDescriptionCollector" class="com.payneteasy.superfly.client.MergingActionDescriptionCollector">
		<property name="collectors">
			<list>
				<ref bean="commaDelimitedListActionDescriptionCollector"/>
			</list>
		</property>
	</bean>

	<bean id="superflyDataSender" class="com.payneteasy.superfly.client.SuperflyDataSender">
		<property name="ssoService" ref="ssoService"/>
		<property name="actionDescriptionCollector" ref="mergingActionDescriptionCollector"/>
		<property name="subsystemIdentifier" value="jira"/>
		<property name="autoSend" value="false"/>
	</bean>
	
	<bean id="initialiazer" class="com.payneteasy.superfly.jira.init.Initializer" init-method="init" destroy-method="destroy">
		<property name="sender" ref="superflyDataSender"/>
		<property name="ssoService" ref="ssoService"/>
		<property name="subsystemIdentifier" value="${subsystem.name}"/>
		<property name="principalName" value="${principal.name}"/>
		<property name="groupsCommaDelimitedList" value="${actions.list}"/>
	</bean>
    
</beans>
